name: Trade-Up Engine CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install -r requirements.txt
    
    - name: Code formatting check (Black)
      run: |
        black --check --diff .
    
    - name: Import sorting check (isort)
      run: |
        isort --check-only --diff .
    
    - name: Linting (Flake8)
      run: |
        flake8 app/ engine/ config/ data/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ engine/ config/ data/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Security check (Bandit)
      run: |
        bandit -r app/ engine/ config/ data/ -f json -o bandit-report.json || true
        cat bandit-report.json
    
    - name: Type checking (MyPy)
      run: |
        mypy app/ engine/ config/ data/ --ignore-missing-imports || true
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=app --cov=engine --cov=config --cov=data --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    
    - name: Install safety
      run: pip install safety
    
    - name: Security check dependencies
      run: safety check -r requirements.txt --json --output safety-report.json || true
    
    - name: Upload safety report
      uses: actions/upload-artifact@v3
      with:
        name: safety-report
        path: safety-report.json

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        if [ -f Dockerfile.dev ]; then
          docker build -f Dockerfile.dev -t trade-up-engine:test .
        else
          echo "No Dockerfile found, skipping Docker build"
        fi

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    
    - name: Install pre-commit
      run: pip install pre-commit
    
    - name: Run pre-commit hooks
      run: |
        pre-commit install
        pre-commit run --all-files || true